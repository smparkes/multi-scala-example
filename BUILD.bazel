load(
    "@io_bazel_rules_scala//scala:scala.bzl",
    "scala_binary",
    "scala_library",
    "scala_test",
)

# bazel run hello-2.11 && bazel run hello-2.12 && bazel run hello

# Note: in our prod environments, we use starlark macros to generated
# the versions we want using string interpolation so we don't have
# code duplication. At some point, I'll add an example of that.

scala_library(
    name = "library-2.11",
    srcs = [
        "hello.scala",
        "hello_211.scala",
    ],
    toolchain = "@io_bazel_rules_scala//scala:scala-2.11-scala-toolchain",
)

java_binary(
    name = "hello-2.11",
    main_class = "App",
    runtime_deps = [":library-2.11"],
)

scala_library(
    name = "library-2.12",
    srcs = [
        "hello.scala",
        "hello_212.scala",
    ],
    toolchain = "@io_bazel_rules_scala//scala:scala-2.12-scala-toolchain",
)

java_binary(
    name = "hello-2.12",
    main_class = "App",
    runtime_deps = [":library-2.12"],
)

# These targets use the default toolchain which is selected in
# `WORKSPACE`, e.g.,
# `register_toolchains("@io_bazel_rules_scala//scala:scala-2.12-toolchain")`

scala_library(
    name = "library",
    srcs = [
        "hello.scala",
        "hello_default.scala",
    ],
)

java_binary(
    name = "hello",
    main_class = "App",
    runtime_deps = [":library"],
)
